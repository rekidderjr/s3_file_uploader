name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Vulnerability Scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install safety bandit semgrep

    - name: Run Safety check for known vulnerabilities
      run: |
        safety check --json --output safety-report.json || true

    - name: Run Bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json || true

    - name: Run Semgrep security analysis
      run: |
        semgrep --config=auto --json --output=semgrep-report.json . || true

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
          semgrep-report.json

  secret-scan:
    runs-on: ubuntu-latest
    name: Secret Detection

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog for filesystem scan
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        extra_args: --debug --only-verified

  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Vulnerability Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pip-audit
      run: pip install pip-audit

    - name: Run pip-audit
      run: |
        if [ -f requirements.txt ]; then
          pip-audit -r requirements.txt --format=json --output=pip-audit-report.json || true
        else
          echo "No requirements.txt found, skipping pip-audit"
        fi

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-report
        path: pip-audit-report.json