name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pylint pydocstyle
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Run Black formatter check
      run: |
        black --check --diff . || true
        
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff . || true
        
    - name: Run flake8 linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run pylint
      run: |
        pylint **/*.py --exit-zero --output-format=json > pylint-report.json || true
        
    - name: Run mypy type checking
      run: |
        mypy . --ignore-missing-imports --json-report mypy-report || true

    - name: Run pydocstyle documentation check
      run: |
        pydocstyle . --convention=google || true
        
    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quality-reports
        path: |
          pylint-report.json
          mypy-report/
